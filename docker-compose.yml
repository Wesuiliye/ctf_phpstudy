version: '3.8'  # 指定Docker Compose文件格式版本，确保兼容性

services:
  # Web服务配置（Apache+PHP）
  web:
    build:
      context: .  # 构建上下文路径，当前目录
      dockerfile: Dockerfile  # 使用指定的Dockerfile构建镜像
    ports:
      - "8011:80"  # 将容器的80端口映射到宿主机的8011端口
    volumes:
      - ./www:/var/www/html  # 挂载本地www目录到容器的网站根目录
    depends_on:
      - db  # 确保db服务先于web服务启动
    networks:
      - app-network  # 加入自定义网络，实现服务间通信

  # 数据库服务配置（MySQL 8.0）
  db:
    image: mysql:8.0  # 使用MySQL 8.0官方镜像
    command: --default-authentication-plugin=mysql_native_password  # 设置认证插件，兼容旧客户端
    restart: always  # 容器退出时自动重启
    environment:
      MYSQL_ROOT_PASSWORD: root  # root用户密码
      MYSQL_DATABASE: phptopic   # 自动创建的数据库名称
    volumes:
      - mysql-data:/var/lib/mysql  # 持久化存储数据库数据
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # 挂载SQL初始化文件
    ports:
      - "13306:3306"  # 映射MySQL端口到宿主机
    networks:
      - app-network  # 加入相同网络，与web服务通信

# 数据卷定义
volumes:
  mysql-data:  # 定义名为mysql-data的数据卷，用于持久化MySQL数据

# 网络定义
networks:
  app-network:
    driver: bridge  # 使用bridge网络模式，默认配置